from PyQt4 import QtGui, QtCore
from PyQt4.QtCore import pyqtSignal
import sys

class LogWindow(QtGui.QDockWidget):
    def __init__(self, parent=None):
        QtGui.QDockWidget.__init__(self, parent)
        self.setAllowedAreas(QtCore.Qt.AllDockWidgetAreas)

        # screen = QtGui.QDesktopWidget().screenGeometry()
        # mysize = self.geometry()
        # self.hpos = (screen.width() - mysize.width()) / 2
        # self.vpos = 170
        # self.setGeometry(QtCore.QRect(self.hpos + 100, self.vpos, 600, 500))
        # self.setModal(False)
        self.AMDock = parent
        # layout = QtGui.QVBoxLayout()

        font = QtGui.QFont('Courier New')
        # font.setPointSize(10)
        font.setKerning(False)
        self.textedit = QtGui.QTextEdit(self)
        self.textedit.setMinimumWidth(500)
        self.textedit.ensureCursorVisible()
        self.textedit.setLineWrapMode(QtGui.QTextEdit.NoWrap)
        self.textedit.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.textedit.setFont(font)
        self.textedit.setReadOnly(True)
        self.textedit.append('Welcome to AMDock\nVersion %s\n' % self.AMDock.version)
        self.textedit.append('AMDOCK: IP Defining Initial Parameters...')
        self.textedit.textChanged.connect(self.jump)
        # layout.addWidget(self.textedit)
        # self.parent.log_view.stateChanged.connect(lambda: self.ch_state(self.parent.log_view))
        # self.finished.connect(self.closed)
        # if self.parent.log_view.isChecked():
        #     self.show()

        # self.setLayout(layout)
        self.setWidget(self.textedit)

    # def closed(self):
    #     self.parent.log_view.setChecked(False)
    def jump(self):
        self.textedit.verticalScrollBar().setValue(self.textedit.verticalScrollBar().maximum())

    def ch_state(self, st):
        if st.isChecked() == False:
            self.close()
        else:
            self.show()
